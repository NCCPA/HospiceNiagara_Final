@model PagedList.IPagedList<HospiceNiagara.Models.DatabaseModels.Meetings>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Meetings";
}

<h1>Meetings</h1>
<hr />
<br />

<!--Search-->
@using (Html.BeginForm("Index","AdminMeetings",FormMethod.Get))
{
    <p>
        <div class="form-inline">
            <label class="control-label">Search by Meeting Name :</label> @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </p>
}
<!-- /End of search-->


<table class="table table-striped table-hover">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter=ViewBag.CurrentFilter })
        </th>
        <th>
            Desciption
        </th>
        <th>
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Location
        </th>
        <th>
            Requirements
        </th>
        <th>
            Visible
        </th>
        <th>
            Start Time
        </th>
        <th>
            End Time
        </th>
        <th>
            Staff Name Lead
        </th>
        <th>
            Created By
        </th>
        <th>
            <a href="@Url.Action("Create","AdminMeetings")" class="btn btn-success">Create New</a>    
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Requirements)
            </td>
            <td>                
                @if(item.isVisible)
                {
                    <p>Yes</p>
                }
                else
                {
                    <p>No</p>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StaffLeadID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedByID)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-primary" })
                @Html.ActionLink("Details", "Details", new { id = item.ID }, new { @class = "btn btn-primary" })
                @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "btn btn-primary" })
            </td>
        </tr>
    }

</table>

Page @(Model.PageCount < Model.PageNumber ? 0: Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
